{
  "dict": {
    "actions": {
      "add": {
        "desc": "register new repository in CK"
      },
      "browse": {
        "desc": "show remote repo in a browser"
      },
      "copy": {
        "desc": "copy repo (forbidden)"
      },
      "cp": {
        "desc": "copy repo (forbidden)"
      },
      "create": {
        "desc": "register new repository in CK"
      },
      "delete": {
        "desc": "remove repository from CK"
      },
      "deps": {
        "desc": "resolve dependencies on other repositories for a given repository"
      },
      "find": {
        "desc": "find path to repo"
      },
      "get_and_unzip_archive": {
        "desc": "(receive repository from web if needed in zip), unzip and register repository in CK"
      },
      "import": {
        "desc": "register repository from current path in CK"
      },
      "print_deps": {
        "desc": "print dependencies on other shared repositories"
      },
      "pull": {
        "desc": "if a given repository is shared, pull it from GIT"
      },
      "push": {
        "desc": "if a given repository is shared shared, push and commit it to GIT"
      },
      "recache": {
        "desc": "recache all local repositories (to speed up search)"
      },
      "remove": {
        "desc": "remove repository from CK"
      },
      "ren": {
        "desc": "rename repo"
      },
      "rename": {
        "desc": "rename repo"
      },
      "renew": {
        "desc": "renew repository (remove fully and pull again)"
      },
      "reset": {
        "desc": "reset git repos (default branch)"
      },
      "rm": {
        "desc": "remove repository from CK"
      },
      "show": {
        "desc": "show repositories and their status"
      },
      "unzip": {
        "desc": "unzip entries from an archive to a given CK repository"
      },
      "update": {
        "desc": "update repository description"
      },
      "where": {
        "desc": "find local path to a given repository"
      },
      "zip": {
        "desc": "archive repository to zip (can be shared with public, for Artifact Evaluation, etc)"
      }
    },
    "actions_redirect": {
      "import": "import_repo"
    },
    "copyright": "See CK COPYRIGHT.txt for copyright details",
    "desc": "CK repositories",
    "developer": "Grigori Fursin",
    "developer_email": "Grigori.Fursin@cTuning.org",
    "developer_webpage": "http://cTuning.org/lab/people/gfursin",
    "license": "See CK LICENSE.txt for licensing details"
  },
  "misc": {
    "actions": {
      "add": {
        "url_api": "https://github.com/ctuning/ck/tree/master/ck/repo/module/repo/module.py#L34"
      },
      "browse": {},
      "copy": {},
      "cp": {},
      "create": {},
      "delete": {},
      "deps": {},
      "find": {},
      "get_and_unzip_archive": {},
      "import": {},
      "print_deps": {},
      "pull": {},
      "push": {},
      "recache": {},
      "remove": {},
      "ren": {},
      "rename": {},
      "renew": {},
      "reset": {},
      "rm": {},
      "show": {
        "url_api": "https://github.com/ctuning/ck/tree/master/ck/repo/module/repo/module.py#L233"
      },
      "unzip": {},
      "update": {},
      "where": {},
      "zip": {}
    },
    "data_uid": "befd7892b0d469e9",
    "data_uoa": "repo",
    "module_uid": "032630d041b4fd8a",
    "module_uoa": "module",
    "repo_uid": "604419a9fcc7a081",
    "repo_uoa": "default",
    "repo_url1": "https://github.com/ctuning/ck/tree/master/ck/repo/module/repo/module.py",
    "repo_url2": "https://github.com/ctuning/ck/tree/master/ck/repo/module/repo/.cm/meta.json",
    "workflow": ""
  }
}
